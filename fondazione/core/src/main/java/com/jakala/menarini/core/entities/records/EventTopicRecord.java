/*
 * This file is generated by jOOQ.
 */
package com.jakala.menarini.core.entities.records;


import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import com.jakala.menarini.core.entities.EventTopic;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.12"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EventTopicRecord extends UpdatableRecordImpl<EventTopicRecord> implements Record6<Long, Integer, Long, Long, Timestamp, Timestamp> {

    private static final long serialVersionUID = -378607836;

    /**
     * Setter for <code>menarini_dev.EVENT_TOPIC.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>menarini_dev.EVENT_TOPIC.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>menarini_dev.EVENT_TOPIC.priority</code>.
     */
    public void setPriority(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>menarini_dev.EVENT_TOPIC.priority</code>.
     */
    public Integer getPriority() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>menarini_dev.EVENT_TOPIC.topic_id</code>.
     */
    public void setTopicId(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>menarini_dev.EVENT_TOPIC.topic_id</code>.
     */
    public Long getTopicId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>menarini_dev.EVENT_TOPIC.event_id</code>.
     */
    public void setEventId(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>menarini_dev.EVENT_TOPIC.event_id</code>.
     */
    public Long getEventId() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>menarini_dev.EVENT_TOPIC.created_on</code>.
     */
    public void setCreatedOn(Timestamp value) {
        set(4, value);
    }

    /**
     * Getter for <code>menarini_dev.EVENT_TOPIC.created_on</code>.
     */
    public Timestamp getCreatedOn() {
        return (Timestamp) get(4);
    }

    /**
     * Setter for <code>menarini_dev.EVENT_TOPIC.last_updated_on</code>.
     */
    public void setLastUpdatedOn(Timestamp value) {
        set(5, value);
    }

    /**
     * Getter for <code>menarini_dev.EVENT_TOPIC.last_updated_on</code>.
     */
    public Timestamp getLastUpdatedOn() {
        return (Timestamp) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<Long, Integer, Long, Long, Timestamp, Timestamp> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<Long, Integer, Long, Long, Timestamp, Timestamp> valuesRow() {
        return (Row6) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return EventTopic.EVENT_TOPIC.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return EventTopic.EVENT_TOPIC.PRIORITY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field3() {
        return EventTopic.EVENT_TOPIC.TOPIC_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field4() {
        return EventTopic.EVENT_TOPIC.EVENT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field5() {
        return EventTopic.EVENT_TOPIC.CREATED_ON;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field6() {
        return EventTopic.EVENT_TOPIC.LAST_UPDATED_ON;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component2() {
        return getPriority();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component3() {
        return getTopicId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component4() {
        return getEventId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component5() {
        return getCreatedOn();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component6() {
        return getLastUpdatedOn();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getPriority();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value3() {
        return getTopicId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value4() {
        return getEventId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value5() {
        return getCreatedOn();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value6() {
        return getLastUpdatedOn();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EventTopicRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EventTopicRecord value2(Integer value) {
        setPriority(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EventTopicRecord value3(Long value) {
        setTopicId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EventTopicRecord value4(Long value) {
        setEventId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EventTopicRecord value5(Timestamp value) {
        setCreatedOn(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EventTopicRecord value6(Timestamp value) {
        setLastUpdatedOn(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EventTopicRecord values(Long value1, Integer value2, Long value3, Long value4, Timestamp value5, Timestamp value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached EventTopicRecord
     */
    public EventTopicRecord() {
        super(EventTopic.EVENT_TOPIC);
    }

    /**
     * Create a detached, initialised EventTopicRecord
     */
    public EventTopicRecord(Long id, Integer priority, Long topicId, Long eventId, Timestamp createdOn, Timestamp lastUpdatedOn) {
        super(EventTopic.EVENT_TOPIC);

        set(0, id);
        set(1, priority);
        set(2, topicId);
        set(3, eventId);
        set(4, createdOn);
        set(5, lastUpdatedOn);
    }
}

/*
 * This file is generated by jOOQ.
 */
package com.jakala.menarini.core.entities.records;


import java.time.LocalDateTime;

import com.jakala.menarini.core.entities.EventEnrollment;

import org.jooq.Field;
import org.jooq.JSON;
import org.jooq.Record1;
import org.jooq.Record10;
import org.jooq.Row10;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EventEnrollmentRecord extends UpdatableRecordImpl<EventEnrollmentRecord> implements Record10<Long, String, Long, String, LocalDateTime, String, LocalDateTime, JSON, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>menarini_dev.EVENT_ENROLLMENT.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>menarini_dev.EVENT_ENROLLMENT.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>menarini_dev.EVENT_ENROLLMENT.event_id</code>.
     */
    public void setEventId(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>menarini_dev.EVENT_ENROLLMENT.event_id</code>.
     */
    public String getEventId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>menarini_dev.EVENT_ENROLLMENT.registered_user_id</code>.
     */
    public void setRegisteredUserId(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>menarini_dev.EVENT_ENROLLMENT.registered_user_id</code>.
     */
    public Long getRegisteredUserId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>menarini_dev.EVENT_ENROLLMENT.is_live_stream</code>.
     */
    public void setIsLiveStream(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>menarini_dev.EVENT_ENROLLMENT.is_live_stream</code>.
     */
    public String getIsLiveStream() {
        return (String) get(3);
    }

    /**
     * Setter for
     * <code>menarini_dev.EVENT_ENROLLMENT.live_stream_registration_ts</code>.
     */
    public void setLiveStreamRegistrationTs(LocalDateTime value) {
        set(4, value);
    }

    /**
     * Getter for
     * <code>menarini_dev.EVENT_ENROLLMENT.live_stream_registration_ts</code>.
     */
    public LocalDateTime getLiveStreamRegistrationTs() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>menarini_dev.EVENT_ENROLLMENT.is_residential</code>.
     */
    public void setIsResidential(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>menarini_dev.EVENT_ENROLLMENT.is_residential</code>.
     */
    public String getIsResidential() {
        return (String) get(5);
    }

    /**
     * Setter for
     * <code>menarini_dev.EVENT_ENROLLMENT.residential_registration_ts</code>.
     */
    public void setResidentialRegistrationTs(LocalDateTime value) {
        set(6, value);
    }

    /**
     * Getter for
     * <code>menarini_dev.EVENT_ENROLLMENT.residential_registration_ts</code>.
     */
    public LocalDateTime getResidentialRegistrationTs() {
        return (LocalDateTime) get(6);
    }

    /**
     * Setter for
     * <code>menarini_dev.EVENT_ENROLLMENT.in_person_participation_date_list</code>.
     */
    public void setInPersonParticipationDateList(JSON value) {
        set(7, value);
    }

    /**
     * Getter for
     * <code>menarini_dev.EVENT_ENROLLMENT.in_person_participation_date_list</code>.
     */
    public JSON getInPersonParticipationDateList() {
        return (JSON) get(7);
    }

    /**
     * Setter for <code>menarini_dev.EVENT_ENROLLMENT.created_on</code>.
     */
    public void setCreatedOn(LocalDateTime value) {
        set(8, value);
    }

    /**
     * Getter for <code>menarini_dev.EVENT_ENROLLMENT.created_on</code>.
     */
    public LocalDateTime getCreatedOn() {
        return (LocalDateTime) get(8);
    }

    /**
     * Setter for <code>menarini_dev.EVENT_ENROLLMENT.last_updated_on</code>.
     */
    public void setLastUpdatedOn(LocalDateTime value) {
        set(9, value);
    }

    /**
     * Getter for <code>menarini_dev.EVENT_ENROLLMENT.last_updated_on</code>.
     */
    public LocalDateTime getLastUpdatedOn() {
        return (LocalDateTime) get(9);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record10 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row10<Long, String, Long, String, LocalDateTime, String, LocalDateTime, JSON, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row10) super.fieldsRow();
    }

    @Override
    public Row10<Long, String, Long, String, LocalDateTime, String, LocalDateTime, JSON, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row10) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return EventEnrollment.EVENT_ENROLLMENT.ID;
    }

    @Override
    public Field<String> field2() {
        return EventEnrollment.EVENT_ENROLLMENT.EVENT_ID;
    }

    @Override
    public Field<Long> field3() {
        return EventEnrollment.EVENT_ENROLLMENT.REGISTERED_USER_ID;
    }

    @Override
    public Field<String> field4() {
        return EventEnrollment.EVENT_ENROLLMENT.IS_LIVE_STREAM;
    }

    @Override
    public Field<LocalDateTime> field5() {
        return EventEnrollment.EVENT_ENROLLMENT.LIVE_STREAM_REGISTRATION_TS;
    }

    @Override
    public Field<String> field6() {
        return EventEnrollment.EVENT_ENROLLMENT.IS_RESIDENTIAL;
    }

    @Override
    public Field<LocalDateTime> field7() {
        return EventEnrollment.EVENT_ENROLLMENT.RESIDENTIAL_REGISTRATION_TS;
    }

    @Override
    public Field<JSON> field8() {
        return EventEnrollment.EVENT_ENROLLMENT.IN_PERSON_PARTICIPATION_DATE_LIST;
    }

    @Override
    public Field<LocalDateTime> field9() {
        return EventEnrollment.EVENT_ENROLLMENT.CREATED_ON;
    }

    @Override
    public Field<LocalDateTime> field10() {
        return EventEnrollment.EVENT_ENROLLMENT.LAST_UPDATED_ON;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getEventId();
    }

    @Override
    public Long component3() {
        return getRegisteredUserId();
    }

    @Override
    public String component4() {
        return getIsLiveStream();
    }

    @Override
    public LocalDateTime component5() {
        return getLiveStreamRegistrationTs();
    }

    @Override
    public String component6() {
        return getIsResidential();
    }

    @Override
    public LocalDateTime component7() {
        return getResidentialRegistrationTs();
    }

    @Override
    public JSON component8() {
        return getInPersonParticipationDateList();
    }

    @Override
    public LocalDateTime component9() {
        return getCreatedOn();
    }

    @Override
    public LocalDateTime component10() {
        return getLastUpdatedOn();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getEventId();
    }

    @Override
    public Long value3() {
        return getRegisteredUserId();
    }

    @Override
    public String value4() {
        return getIsLiveStream();
    }

    @Override
    public LocalDateTime value5() {
        return getLiveStreamRegistrationTs();
    }

    @Override
    public String value6() {
        return getIsResidential();
    }

    @Override
    public LocalDateTime value7() {
        return getResidentialRegistrationTs();
    }

    @Override
    public JSON value8() {
        return getInPersonParticipationDateList();
    }

    @Override
    public LocalDateTime value9() {
        return getCreatedOn();
    }

    @Override
    public LocalDateTime value10() {
        return getLastUpdatedOn();
    }

    @Override
    public EventEnrollmentRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public EventEnrollmentRecord value2(String value) {
        setEventId(value);
        return this;
    }

    @Override
    public EventEnrollmentRecord value3(Long value) {
        setRegisteredUserId(value);
        return this;
    }

    @Override
    public EventEnrollmentRecord value4(String value) {
        setIsLiveStream(value);
        return this;
    }

    @Override
    public EventEnrollmentRecord value5(LocalDateTime value) {
        setLiveStreamRegistrationTs(value);
        return this;
    }

    @Override
    public EventEnrollmentRecord value6(String value) {
        setIsResidential(value);
        return this;
    }

    @Override
    public EventEnrollmentRecord value7(LocalDateTime value) {
        setResidentialRegistrationTs(value);
        return this;
    }

    @Override
    public EventEnrollmentRecord value8(JSON value) {
        setInPersonParticipationDateList(value);
        return this;
    }

    @Override
    public EventEnrollmentRecord value9(LocalDateTime value) {
        setCreatedOn(value);
        return this;
    }

    @Override
    public EventEnrollmentRecord value10(LocalDateTime value) {
        setLastUpdatedOn(value);
        return this;
    }

    @Override
    public EventEnrollmentRecord values(Long value1, String value2, Long value3, String value4, LocalDateTime value5, String value6, LocalDateTime value7, JSON value8, LocalDateTime value9, LocalDateTime value10) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached EventEnrollmentRecord
     */
    public EventEnrollmentRecord() {
        super(EventEnrollment.EVENT_ENROLLMENT);
    }

    /**
     * Create a detached, initialised EventEnrollmentRecord
     */
    public EventEnrollmentRecord(Long id, String eventId, Long registeredUserId, String isLiveStream, LocalDateTime liveStreamRegistrationTs, String isResidential, LocalDateTime residentialRegistrationTs, JSON inPersonParticipationDateList, LocalDateTime createdOn, LocalDateTime lastUpdatedOn) {
        super(EventEnrollment.EVENT_ENROLLMENT);

        setId(id);
        setEventId(eventId);
        setRegisteredUserId(registeredUserId);
        setIsLiveStream(isLiveStream);
        setLiveStreamRegistrationTs(liveStreamRegistrationTs);
        setIsResidential(isResidential);
        setResidentialRegistrationTs(residentialRegistrationTs);
        setInPersonParticipationDateList(inPersonParticipationDateList);
        setCreatedOn(createdOn);
        setLastUpdatedOn(lastUpdatedOn);
    }
}

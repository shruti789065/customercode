/*
 * This file is generated by jOOQ.
 */
package com.jakala.menarini.core.entities;


import java.sql.Date;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import com.jakala.menarini.core.entities.utils.Indexes;
import com.jakala.menarini.core.entities.utils.Keys;
import com.jakala.menarini.core.entities.utils.DbSchema;
import com.jakala.menarini.core.entities.records.RegisteredUserRecord;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.12"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RegisteredUser extends TableImpl<RegisteredUserRecord> {

    private static final long serialVersionUID = 1407510148;

    /**
     * The reference instance of <code>menarini_dev.REGISTERED_USER</code>
     */
    public static final RegisteredUser REGISTERED_USER = new RegisteredUser();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RegisteredUserRecord> getRecordType() {
        return RegisteredUserRecord.class;
    }

    /**
     * The column <code>menarini_dev.REGISTERED_USER.id</code>.
     */
    public final TableField<RegisteredUserRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>menarini_dev.REGISTERED_USER.lastname</code>.
     */
    public final TableField<RegisteredUserRecord, String> LASTNAME = createField("lastname", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>menarini_dev.REGISTERED_USER.firstname</code>.
     */
    public final TableField<RegisteredUserRecord, String> FIRSTNAME = createField("firstname", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>menarini_dev.REGISTERED_USER.email</code>.
     */
    public final TableField<RegisteredUserRecord, String> EMAIL = createField("email", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>menarini_dev.REGISTERED_USER.username</code>.
     */
    public final TableField<RegisteredUserRecord, String> USERNAME = createField("username", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>menarini_dev.REGISTERED_USER.occupation</code>.
     */
    public final TableField<RegisteredUserRecord, String> OCCUPATION = createField("occupation", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>menarini_dev.REGISTERED_USER.gender</code>.
     */
    public final TableField<RegisteredUserRecord, String> GENDER = createField("gender", org.jooq.impl.SQLDataType.VARCHAR(30), this, "");

    /**
     * The column <code>menarini_dev.REGISTERED_USER.birth_date</code>.
     */
    public final TableField<RegisteredUserRecord, Date> BIRTH_DATE = createField("birth_date", org.jooq.impl.SQLDataType.DATE, this, "");

    /**
     * The column <code>menarini_dev.REGISTERED_USER.phone</code>.
     */
    public final TableField<RegisteredUserRecord, String> PHONE = createField("phone", org.jooq.impl.SQLDataType.VARCHAR(30), this, "");

    /**
     * The column <code>menarini_dev.REGISTERED_USER.tax_id_code</code>.
     */
    public final TableField<RegisteredUserRecord, String> TAX_ID_CODE = createField("tax_id_code", org.jooq.impl.SQLDataType.VARCHAR(30), this, "");

    /**
     * The column <code>menarini_dev.REGISTERED_USER.linkedin_profile</code>.
     */
    public final TableField<RegisteredUserRecord, String> LINKEDIN_PROFILE = createField("linkedin_profile", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>menarini_dev.REGISTERED_USER.country</code>.
     */
    public final TableField<RegisteredUserRecord, String> COUNTRY = createField("country", org.jooq.impl.SQLDataType.VARCHAR(30), this, "");

    /**
     * The column <code>menarini_dev.REGISTERED_USER.personal_data_processing_consent</code>.
     */
    public final TableField<RegisteredUserRecord, String> PERSONAL_DATA_PROCESSING_CONSENT = createField("personal_data_processing_consent", org.jooq.impl.SQLDataType.CHAR(1), this, "");

    /**
     * The column <code>menarini_dev.REGISTERED_USER.personal_data_processing_consent_ts</code>.
     */
    public final TableField<RegisteredUserRecord, Timestamp> PERSONAL_DATA_PROCESSING_CONSENT_TS = createField("personal_data_processing_consent_ts", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>menarini_dev.REGISTERED_USER.profiling_consent</code>.
     */
    public final TableField<RegisteredUserRecord, String> PROFILING_CONSENT = createField("profiling_consent", org.jooq.impl.SQLDataType.CHAR(1), this, "");

    /**
     * The column <code>menarini_dev.REGISTERED_USER.profiling_consent_ts</code>.
     */
    public final TableField<RegisteredUserRecord, Timestamp> PROFILING_CONSENT_TS = createField("profiling_consent_ts", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>menarini_dev.REGISTERED_USER.newsletter_subscription</code>.
     */
    public final TableField<RegisteredUserRecord, String> NEWSLETTER_SUBSCRIPTION = createField("newsletter_subscription", org.jooq.impl.SQLDataType.CHAR(1), this, "");

    /**
     * The column <code>menarini_dev.REGISTERED_USER.newsletter_subscription_ts</code>.
     */
    public final TableField<RegisteredUserRecord, Timestamp> NEWSLETTER_SUBSCRIPTION_TS = createField("newsletter_subscription_ts", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>menarini_dev.REGISTERED_USER.legacy_id</code>.
     */
    public final TableField<RegisteredUserRecord, Integer> LEGACY_ID = createField("legacy_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>menarini_dev.REGISTERED_USER.created_on</code>.
     */
    public final TableField<RegisteredUserRecord, Timestamp> CREATED_ON = createField("created_on", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>menarini_dev.REGISTERED_USER.last_updated_on</code>.
     */
    public final TableField<RegisteredUserRecord, Timestamp> LAST_UPDATED_ON = createField("last_updated_on", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>menarini_dev.REGISTERED_USER</code> table reference
     */
    public RegisteredUser() {
        this(DSL.name("REGISTERED_USER"), null);
    }

    /**
     * Create an aliased <code>menarini_dev.REGISTERED_USER</code> table reference
     */
    public RegisteredUser(String alias) {
        this(DSL.name(alias), REGISTERED_USER);
    }

    /**
     * Create an aliased <code>menarini_dev.REGISTERED_USER</code> table reference
     */
    public RegisteredUser(Name alias) {
        this(alias, REGISTERED_USER);
    }

    private RegisteredUser(Name alias, Table<RegisteredUserRecord> aliased) {
        this(alias, aliased, null);
    }

    private RegisteredUser(Name alias, Table<RegisteredUserRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> RegisteredUser(Table<O> child, ForeignKey<O, RegisteredUserRecord> key) {
        super(child, key, REGISTERED_USER);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DbSchema.MENARINI;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.REGISTERED_USER_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<RegisteredUserRecord, Long> getIdentity() {
        return Keys.IDENTITY_REGISTERED_USER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<RegisteredUserRecord> getPrimaryKey() {
        return Keys.KEY_REGISTERED_USER_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<RegisteredUserRecord>> getKeys() {
        return Arrays.<UniqueKey<RegisteredUserRecord>>asList(Keys.KEY_REGISTERED_USER_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RegisteredUser as(String alias) {
        return new RegisteredUser(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RegisteredUser as(Name alias) {
        return new RegisteredUser(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public RegisteredUser rename(String name) {
        return new RegisteredUser(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public RegisteredUser rename(Name name) {
        return new RegisteredUser(name, null);
    }
}

/*
 * This file is generated by jOOQ.
 */
package com.jakala.menarini.core.entities.utils;


import com.jakala.menarini.core.entities.EventEnrollment;
import com.jakala.menarini.core.entities.RegisteredUser;
import com.jakala.menarini.core.entities.RegisteredUserRole;
import com.jakala.menarini.core.entities.RegisteredUserTopic;
import com.jakala.menarini.core.entities.Role;
import com.jakala.menarini.core.entities.records.EventEnrollmentRecord;
import com.jakala.menarini.core.entities.records.RegisteredUserRecord;
import com.jakala.menarini.core.entities.records.RegisteredUserRoleRecord;
import com.jakala.menarini.core.entities.records.RegisteredUserTopicRecord;
import com.jakala.menarini.core.entities.records.RoleRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * menarini_dev.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<EventEnrollmentRecord> KEY_EVENT_ENROLLMENT_PRIMARY = Internal.createUniqueKey(EventEnrollment.EVENT_ENROLLMENT, DSL.name("KEY_EVENT_ENROLLMENT_PRIMARY"), new TableField[] { EventEnrollment.EVENT_ENROLLMENT.ID }, true);
    public static final UniqueKey<RegisteredUserRecord> KEY_REGISTERED_USER_PRIMARY = Internal.createUniqueKey(RegisteredUser.REGISTERED_USER, DSL.name("KEY_REGISTERED_USER_PRIMARY"), new TableField[] { RegisteredUser.REGISTERED_USER.ID }, true);
    public static final UniqueKey<RegisteredUserRoleRecord> KEY_REGISTERED_USER_ROLE_PRIMARY = Internal.createUniqueKey(RegisteredUserRole.REGISTERED_USER_ROLE, DSL.name("KEY_REGISTERED_USER_ROLE_PRIMARY"), new TableField[] { RegisteredUserRole.REGISTERED_USER_ROLE.ID }, true);
    public static final UniqueKey<RegisteredUserTopicRecord> KEY_REGISTERED_USER_TOPIC_PRIMARY = Internal.createUniqueKey(RegisteredUserTopic.REGISTERED_USER_TOPIC, DSL.name("KEY_REGISTERED_USER_TOPIC_PRIMARY"), new TableField[] { RegisteredUserTopic.REGISTERED_USER_TOPIC.ID }, true);
    public static final UniqueKey<RoleRecord> KEY_ROLE_PRIMARY = Internal.createUniqueKey(Role.ROLE, DSL.name("KEY_ROLE_PRIMARY"), new TableField[] { Role.ROLE.ID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<EventEnrollmentRecord, RegisteredUserRecord> EVENT_ENROLLMENT_IBFK_2 = Internal.createForeignKey(EventEnrollment.EVENT_ENROLLMENT, DSL.name("EVENT_ENROLLMENT_ibfk_2"), new TableField[] { EventEnrollment.EVENT_ENROLLMENT.REGISTERED_USER_ID }, Keys.KEY_REGISTERED_USER_PRIMARY, new TableField[] { RegisteredUser.REGISTERED_USER.ID }, true);
    public static final ForeignKey<RegisteredUserRoleRecord, RegisteredUserRecord> REGISTERED_USER_ROLE_IBFK_1 = Internal.createForeignKey(RegisteredUserRole.REGISTERED_USER_ROLE, DSL.name("REGISTERED_USER_ROLE_ibfk_1"), new TableField[] { RegisteredUserRole.REGISTERED_USER_ROLE.REGISTERED_USER_ID }, Keys.KEY_REGISTERED_USER_PRIMARY, new TableField[] { RegisteredUser.REGISTERED_USER.ID }, true);
    public static final ForeignKey<RegisteredUserRoleRecord, RoleRecord> REGISTERED_USER_ROLE_IBFK_2 = Internal.createForeignKey(RegisteredUserRole.REGISTERED_USER_ROLE, DSL.name("REGISTERED_USER_ROLE_ibfk_2"), new TableField[] { RegisteredUserRole.REGISTERED_USER_ROLE.ROLE_ID }, Keys.KEY_ROLE_PRIMARY, new TableField[] { Role.ROLE.ID }, true);
    public static final ForeignKey<RegisteredUserTopicRecord, RegisteredUserRecord> REGISTERED_USER_TOPIC_IBFK_2 = Internal.createForeignKey(RegisteredUserTopic.REGISTERED_USER_TOPIC, DSL.name("REGISTERED_USER_TOPIC_ibfk_2"), new TableField[] { RegisteredUserTopic.REGISTERED_USER_TOPIC.REGISTERED_USER_ID }, Keys.KEY_REGISTERED_USER_PRIMARY, new TableField[] { RegisteredUser.REGISTERED_USER.ID }, true);
}

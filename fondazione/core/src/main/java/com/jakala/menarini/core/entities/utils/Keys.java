/*
 * This file is generated by jOOQ.
 */
package com.jakala.menarini.core.entities.utils;


import javax.annotation.Generated;

import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.UniqueKey;
import com.jakala.menarini.core.entities.Event;
import com.jakala.menarini.core.entities.EventEnrollment;
import com.jakala.menarini.core.entities.EventSessionDate;
import com.jakala.menarini.core.entities.EventSpeaker;
import com.jakala.menarini.core.entities.EventTopic;
import com.jakala.menarini.core.entities.Location;
import com.jakala.menarini.core.entities.MagazineSubscription;
import com.jakala.menarini.core.entities.NewsletterSubscription;
import com.jakala.menarini.core.entities.RegisteredUser;
import com.jakala.menarini.core.entities.RegisteredUserRole;
import com.jakala.menarini.core.entities.RegisteredUserTopic;
import com.jakala.menarini.core.entities.Role;
import com.jakala.menarini.core.entities.Speaker;
import com.jakala.menarini.core.entities.Topic;
import com.jakala.menarini.core.entities.Venue;
import com.jakala.menarini.core.entities.records.EventEnrollmentRecord;
import com.jakala.menarini.core.entities.records.EventRecord;
import com.jakala.menarini.core.entities.records.EventSessionDateRecord;
import com.jakala.menarini.core.entities.records.EventSpeakerRecord;
import com.jakala.menarini.core.entities.records.EventTopicRecord;
import com.jakala.menarini.core.entities.records.LocationRecord;
import com.jakala.menarini.core.entities.records.MagazineSubscriptionRecord;
import com.jakala.menarini.core.entities.records.NewsletterSubscriptionRecord;
import com.jakala.menarini.core.entities.records.RegisteredUserRecord;
import com.jakala.menarini.core.entities.records.RegisteredUserRoleRecord;
import com.jakala.menarini.core.entities.records.RegisteredUserTopicRecord;
import com.jakala.menarini.core.entities.records.RoleRecord;
import com.jakala.menarini.core.entities.records.SpeakerRecord;
import com.jakala.menarini.core.entities.records.TopicRecord;
import com.jakala.menarini.core.entities.records.VenueRecord;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>menarini_dev</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.12"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<EventRecord, Long> IDENTITY_EVENT = Identities0.IDENTITY_EVENT;
    public static final Identity<EventEnrollmentRecord, Long> IDENTITY_EVENT_ENROLLMENT = Identities0.IDENTITY_EVENT_ENROLLMENT;
    public static final Identity<EventSessionDateRecord, Long> IDENTITY_EVENT_SESSION_DATE = Identities0.IDENTITY_EVENT_SESSION_DATE;
    public static final Identity<EventSpeakerRecord, Long> IDENTITY_EVENT_SPEAKER = Identities0.IDENTITY_EVENT_SPEAKER;
    public static final Identity<EventTopicRecord, Long> IDENTITY_EVENT_TOPIC = Identities0.IDENTITY_EVENT_TOPIC;
    public static final Identity<LocationRecord, Long> IDENTITY_LOCATION = Identities0.IDENTITY_LOCATION;
    public static final Identity<MagazineSubscriptionRecord, Long> IDENTITY_MAGAZINE_SUBSCRIPTION = Identities0.IDENTITY_MAGAZINE_SUBSCRIPTION;
    public static final Identity<NewsletterSubscriptionRecord, Long> IDENTITY_NEWSLETTER_SUBSCRIPTION = Identities0.IDENTITY_NEWSLETTER_SUBSCRIPTION;
    public static final Identity<RegisteredUserRecord, Long> IDENTITY_REGISTERED_USER = Identities0.IDENTITY_REGISTERED_USER;
    public static final Identity<RegisteredUserRoleRecord, Long> IDENTITY_REGISTERED_USER_ROLE = Identities0.IDENTITY_REGISTERED_USER_ROLE;
    public static final Identity<RegisteredUserTopicRecord, Long> IDENTITY_REGISTERED_USER_TOPIC = Identities0.IDENTITY_REGISTERED_USER_TOPIC;
    public static final Identity<RoleRecord, Long> IDENTITY_ROLE = Identities0.IDENTITY_ROLE;
    public static final Identity<SpeakerRecord, Long> IDENTITY_SPEAKER = Identities0.IDENTITY_SPEAKER;
    public static final Identity<TopicRecord, Long> IDENTITY_TOPIC = Identities0.IDENTITY_TOPIC;
    public static final Identity<VenueRecord, Long> IDENTITY_VENUE = Identities0.IDENTITY_VENUE;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<EventRecord> KEY_EVENT_PRIMARY = UniqueKeys0.KEY_EVENT_PRIMARY;
    public static final UniqueKey<EventEnrollmentRecord> KEY_EVENT_ENROLLMENT_PRIMARY = UniqueKeys0.KEY_EVENT_ENROLLMENT_PRIMARY;
    public static final UniqueKey<EventSessionDateRecord> KEY_EVENT_SESSION_DATE_PRIMARY = UniqueKeys0.KEY_EVENT_SESSION_DATE_PRIMARY;
    public static final UniqueKey<EventSpeakerRecord> KEY_EVENT_SPEAKER_PRIMARY = UniqueKeys0.KEY_EVENT_SPEAKER_PRIMARY;
    public static final UniqueKey<EventTopicRecord> KEY_EVENT_TOPIC_PRIMARY = UniqueKeys0.KEY_EVENT_TOPIC_PRIMARY;
    public static final UniqueKey<LocationRecord> KEY_LOCATION_PRIMARY = UniqueKeys0.KEY_LOCATION_PRIMARY;
    public static final UniqueKey<MagazineSubscriptionRecord> KEY_MAGAZINE_SUBSCRIPTION_PRIMARY = UniqueKeys0.KEY_MAGAZINE_SUBSCRIPTION_PRIMARY;
    public static final UniqueKey<NewsletterSubscriptionRecord> KEY_NEWSLETTER_SUBSCRIPTION_PRIMARY = UniqueKeys0.KEY_NEWSLETTER_SUBSCRIPTION_PRIMARY;
    public static final UniqueKey<RegisteredUserRecord> KEY_REGISTERED_USER_PRIMARY = UniqueKeys0.KEY_REGISTERED_USER_PRIMARY;
    public static final UniqueKey<RegisteredUserRoleRecord> KEY_REGISTERED_USER_ROLE_PRIMARY = UniqueKeys0.KEY_REGISTERED_USER_ROLE_PRIMARY;
    public static final UniqueKey<RegisteredUserTopicRecord> KEY_REGISTERED_USER_TOPIC_PRIMARY = UniqueKeys0.KEY_REGISTERED_USER_TOPIC_PRIMARY;
    public static final UniqueKey<RoleRecord> KEY_ROLE_PRIMARY = UniqueKeys0.KEY_ROLE_PRIMARY;
    public static final UniqueKey<SpeakerRecord> KEY_SPEAKER_PRIMARY = UniqueKeys0.KEY_SPEAKER_PRIMARY;
    public static final UniqueKey<TopicRecord> KEY_TOPIC_PRIMARY = UniqueKeys0.KEY_TOPIC_PRIMARY;
    public static final UniqueKey<VenueRecord> KEY_VENUE_PRIMARY = UniqueKeys0.KEY_VENUE_PRIMARY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<EventRecord, LocationRecord> EVENT_IBFK_1 = ForeignKeys0.EVENT_IBFK_1;
    public static final ForeignKey<EventRecord, VenueRecord> EVENT_IBFK_2 = ForeignKeys0.EVENT_IBFK_2;
    public static final ForeignKey<EventEnrollmentRecord, EventRecord> EVENT_ENROLLMENT_IBFK_1 = ForeignKeys0.EVENT_ENROLLMENT_IBFK_1;
    public static final ForeignKey<EventEnrollmentRecord, RegisteredUserRecord> EVENT_ENROLLMENT_IBFK_2 = ForeignKeys0.EVENT_ENROLLMENT_IBFK_2;
    public static final ForeignKey<EventSessionDateRecord, LocationRecord> EVENT_SESSION_DATE_IBFK_1 = ForeignKeys0.EVENT_SESSION_DATE_IBFK_1;
    public static final ForeignKey<EventSessionDateRecord, VenueRecord> EVENT_SESSION_DATE_IBFK_2 = ForeignKeys0.EVENT_SESSION_DATE_IBFK_2;
    public static final ForeignKey<EventSessionDateRecord, EventRecord> EVENT_SESSION_DATE_IBFK_3 = ForeignKeys0.EVENT_SESSION_DATE_IBFK_3;
    public static final ForeignKey<EventSpeakerRecord, EventRecord> EVENT_SPEAKER_IBFK_1 = ForeignKeys0.EVENT_SPEAKER_IBFK_1;
    public static final ForeignKey<EventSpeakerRecord, SpeakerRecord> EVENT_SPEAKER_IBFK_2 = ForeignKeys0.EVENT_SPEAKER_IBFK_2;
    public static final ForeignKey<EventTopicRecord, TopicRecord> EVENT_TOPIC_IBFK_1 = ForeignKeys0.EVENT_TOPIC_IBFK_1;
    public static final ForeignKey<EventTopicRecord, EventRecord> EVENT_TOPIC_IBFK_2 = ForeignKeys0.EVENT_TOPIC_IBFK_2;
    public static final ForeignKey<MagazineSubscriptionRecord, RegisteredUserRecord> MAGAZINE_SUBSCRIPTION_IBFK_1 = ForeignKeys0.MAGAZINE_SUBSCRIPTION_IBFK_1;
    public static final ForeignKey<NewsletterSubscriptionRecord, RegisteredUserRecord> NEWSLETTER_SUBSCRIPTION_IBFK_1 = ForeignKeys0.NEWSLETTER_SUBSCRIPTION_IBFK_1;
    public static final ForeignKey<RegisteredUserRoleRecord, RegisteredUserRecord> REGISTERED_USER_ROLE_IBFK_1 = ForeignKeys0.REGISTERED_USER_ROLE_IBFK_1;
    public static final ForeignKey<RegisteredUserRoleRecord, RoleRecord> REGISTERED_USER_ROLE_IBFK_2 = ForeignKeys0.REGISTERED_USER_ROLE_IBFK_2;
    public static final ForeignKey<RegisteredUserTopicRecord, TopicRecord> REGISTERED_USER_TOPIC_IBFK_1 = ForeignKeys0.REGISTERED_USER_TOPIC_IBFK_1;
    public static final ForeignKey<RegisteredUserTopicRecord, RegisteredUserRecord> REGISTERED_USER_TOPIC_IBFK_2 = ForeignKeys0.REGISTERED_USER_TOPIC_IBFK_2;
    public static final ForeignKey<VenueRecord, LocationRecord> VENUE_IBFK_1 = ForeignKeys0.VENUE_IBFK_1;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<EventRecord, Long> IDENTITY_EVENT = Internal.createIdentity(Event.EVENT, Event.EVENT.ID);
        public static Identity<EventEnrollmentRecord, Long> IDENTITY_EVENT_ENROLLMENT = Internal.createIdentity(EventEnrollment.EVENT_ENROLLMENT, EventEnrollment.EVENT_ENROLLMENT.ID);
        public static Identity<EventSessionDateRecord, Long> IDENTITY_EVENT_SESSION_DATE = Internal.createIdentity(EventSessionDate.EVENT_SESSION_DATE, EventSessionDate.EVENT_SESSION_DATE.ID);
        public static Identity<EventSpeakerRecord, Long> IDENTITY_EVENT_SPEAKER = Internal.createIdentity(EventSpeaker.EVENT_SPEAKER, EventSpeaker.EVENT_SPEAKER.ID);
        public static Identity<EventTopicRecord, Long> IDENTITY_EVENT_TOPIC = Internal.createIdentity(EventTopic.EVENT_TOPIC, EventTopic.EVENT_TOPIC.ID);
        public static Identity<LocationRecord, Long> IDENTITY_LOCATION = Internal.createIdentity(Location.LOCATION, Location.LOCATION.ID);
        public static Identity<MagazineSubscriptionRecord, Long> IDENTITY_MAGAZINE_SUBSCRIPTION = Internal.createIdentity(MagazineSubscription.MAGAZINE_SUBSCRIPTION, MagazineSubscription.MAGAZINE_SUBSCRIPTION.ID);
        public static Identity<NewsletterSubscriptionRecord, Long> IDENTITY_NEWSLETTER_SUBSCRIPTION = Internal.createIdentity(NewsletterSubscription.NEWSLETTER_SUBSCRIPTION, NewsletterSubscription.NEWSLETTER_SUBSCRIPTION.ID);
        public static Identity<RegisteredUserRecord, Long> IDENTITY_REGISTERED_USER = Internal.createIdentity(RegisteredUser.REGISTERED_USER, RegisteredUser.REGISTERED_USER.ID);
        public static Identity<RegisteredUserRoleRecord, Long> IDENTITY_REGISTERED_USER_ROLE = Internal.createIdentity(RegisteredUserRole.REGISTERED_USER_ROLE, RegisteredUserRole.REGISTERED_USER_ROLE.ID);
        public static Identity<RegisteredUserTopicRecord, Long> IDENTITY_REGISTERED_USER_TOPIC = Internal.createIdentity(RegisteredUserTopic.REGISTERED_USER_TOPIC, RegisteredUserTopic.REGISTERED_USER_TOPIC.ID);
        public static Identity<RoleRecord, Long> IDENTITY_ROLE = Internal.createIdentity(Role.ROLE, Role.ROLE.ID);
        public static Identity<SpeakerRecord, Long> IDENTITY_SPEAKER = Internal.createIdentity(Speaker.SPEAKER, Speaker.SPEAKER.ID);
        public static Identity<TopicRecord, Long> IDENTITY_TOPIC = Internal.createIdentity(Topic.TOPIC, Topic.TOPIC.ID);
        public static Identity<VenueRecord, Long> IDENTITY_VENUE = Internal.createIdentity(Venue.VENUE, Venue.VENUE.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<EventRecord> KEY_EVENT_PRIMARY = Internal.createUniqueKey(Event.EVENT, "KEY_EVENT_PRIMARY", Event.EVENT.ID);
        public static final UniqueKey<EventEnrollmentRecord> KEY_EVENT_ENROLLMENT_PRIMARY = Internal.createUniqueKey(EventEnrollment.EVENT_ENROLLMENT, "KEY_EVENT_ENROLLMENT_PRIMARY", EventEnrollment.EVENT_ENROLLMENT.ID);
        public static final UniqueKey<EventSessionDateRecord> KEY_EVENT_SESSION_DATE_PRIMARY = Internal.createUniqueKey(EventSessionDate.EVENT_SESSION_DATE, "KEY_EVENT_SESSION_DATE_PRIMARY", EventSessionDate.EVENT_SESSION_DATE.ID);
        public static final UniqueKey<EventSpeakerRecord> KEY_EVENT_SPEAKER_PRIMARY = Internal.createUniqueKey(EventSpeaker.EVENT_SPEAKER, "KEY_EVENT_SPEAKER_PRIMARY", EventSpeaker.EVENT_SPEAKER.ID);
        public static final UniqueKey<EventTopicRecord> KEY_EVENT_TOPIC_PRIMARY = Internal.createUniqueKey(EventTopic.EVENT_TOPIC, "KEY_EVENT_TOPIC_PRIMARY", EventTopic.EVENT_TOPIC.ID);
        public static final UniqueKey<LocationRecord> KEY_LOCATION_PRIMARY = Internal.createUniqueKey(Location.LOCATION, "KEY_LOCATION_PRIMARY", Location.LOCATION.ID);
        public static final UniqueKey<MagazineSubscriptionRecord> KEY_MAGAZINE_SUBSCRIPTION_PRIMARY = Internal.createUniqueKey(MagazineSubscription.MAGAZINE_SUBSCRIPTION, "KEY_MAGAZINE_SUBSCRIPTION_PRIMARY", MagazineSubscription.MAGAZINE_SUBSCRIPTION.ID);
        public static final UniqueKey<NewsletterSubscriptionRecord> KEY_NEWSLETTER_SUBSCRIPTION_PRIMARY = Internal.createUniqueKey(NewsletterSubscription.NEWSLETTER_SUBSCRIPTION, "KEY_NEWSLETTER_SUBSCRIPTION_PRIMARY", NewsletterSubscription.NEWSLETTER_SUBSCRIPTION.ID);
        public static final UniqueKey<RegisteredUserRecord> KEY_REGISTERED_USER_PRIMARY = Internal.createUniqueKey(RegisteredUser.REGISTERED_USER, "KEY_REGISTERED_USER_PRIMARY", RegisteredUser.REGISTERED_USER.ID);
        public static final UniqueKey<RegisteredUserRoleRecord> KEY_REGISTERED_USER_ROLE_PRIMARY = Internal.createUniqueKey(RegisteredUserRole.REGISTERED_USER_ROLE, "KEY_REGISTERED_USER_ROLE_PRIMARY", RegisteredUserRole.REGISTERED_USER_ROLE.ID);
        public static final UniqueKey<RegisteredUserTopicRecord> KEY_REGISTERED_USER_TOPIC_PRIMARY = Internal.createUniqueKey(RegisteredUserTopic.REGISTERED_USER_TOPIC, "KEY_REGISTERED_USER_TOPIC_PRIMARY", RegisteredUserTopic.REGISTERED_USER_TOPIC.ID);
        public static final UniqueKey<RoleRecord> KEY_ROLE_PRIMARY = Internal.createUniqueKey(Role.ROLE, "KEY_ROLE_PRIMARY", Role.ROLE.ID);
        public static final UniqueKey<SpeakerRecord> KEY_SPEAKER_PRIMARY = Internal.createUniqueKey(Speaker.SPEAKER, "KEY_SPEAKER_PRIMARY", Speaker.SPEAKER.ID);
        public static final UniqueKey<TopicRecord> KEY_TOPIC_PRIMARY = Internal.createUniqueKey(Topic.TOPIC, "KEY_TOPIC_PRIMARY", Topic.TOPIC.ID);
        public static final UniqueKey<VenueRecord> KEY_VENUE_PRIMARY = Internal.createUniqueKey(Venue.VENUE, "KEY_VENUE_PRIMARY", Venue.VENUE.ID);
    }

    private static class ForeignKeys0 {
        public static final ForeignKey<EventRecord, LocationRecord> EVENT_IBFK_1 = Internal.createForeignKey(Keys.KEY_LOCATION_PRIMARY, Event.EVENT, "EVENT_ibfk_1", Event.EVENT.LOCATION_ID);
        public static final ForeignKey<EventRecord, VenueRecord> EVENT_IBFK_2 = Internal.createForeignKey(Keys.KEY_VENUE_PRIMARY, Event.EVENT, "EVENT_ibfk_2", Event.EVENT.VENUE_ID);
        public static final ForeignKey<EventEnrollmentRecord, EventRecord> EVENT_ENROLLMENT_IBFK_1 = Internal.createForeignKey(Keys.KEY_EVENT_PRIMARY, EventEnrollment.EVENT_ENROLLMENT, "EVENT_ENROLLMENT_ibfk_1", EventEnrollment.EVENT_ENROLLMENT.EVENT_ID);
        public static final ForeignKey<EventEnrollmentRecord, RegisteredUserRecord> EVENT_ENROLLMENT_IBFK_2 = Internal.createForeignKey(Keys.KEY_REGISTERED_USER_PRIMARY, EventEnrollment.EVENT_ENROLLMENT, "EVENT_ENROLLMENT_ibfk_2", EventEnrollment.EVENT_ENROLLMENT.REGISTERED_USER_ID);
        public static final ForeignKey<EventSessionDateRecord, LocationRecord> EVENT_SESSION_DATE_IBFK_1 = Internal.createForeignKey(Keys.KEY_LOCATION_PRIMARY, EventSessionDate.EVENT_SESSION_DATE, "EVENT_SESSION_DATE_ibfk_1", EventSessionDate.EVENT_SESSION_DATE.LOCATION_ID);
        public static final ForeignKey<EventSessionDateRecord, VenueRecord> EVENT_SESSION_DATE_IBFK_2 = Internal.createForeignKey(Keys.KEY_VENUE_PRIMARY, EventSessionDate.EVENT_SESSION_DATE, "EVENT_SESSION_DATE_ibfk_2", EventSessionDate.EVENT_SESSION_DATE.VENUE_ID);
        public static final ForeignKey<EventSessionDateRecord, EventRecord> EVENT_SESSION_DATE_IBFK_3 = Internal.createForeignKey(Keys.KEY_EVENT_PRIMARY, EventSessionDate.EVENT_SESSION_DATE, "EVENT_SESSION_DATE_ibfk_3", EventSessionDate.EVENT_SESSION_DATE.EVENT_ID);
        public static final ForeignKey<EventSpeakerRecord, EventRecord> EVENT_SPEAKER_IBFK_1 = Internal.createForeignKey(Keys.KEY_EVENT_PRIMARY, EventSpeaker.EVENT_SPEAKER, "EVENT_SPEAKER_ibfk_1", EventSpeaker.EVENT_SPEAKER.EVENT_ID);
        public static final ForeignKey<EventSpeakerRecord, SpeakerRecord> EVENT_SPEAKER_IBFK_2 = Internal.createForeignKey(Keys.KEY_SPEAKER_PRIMARY, EventSpeaker.EVENT_SPEAKER, "EVENT_SPEAKER_ibfk_2", EventSpeaker.EVENT_SPEAKER.SPEAKER_ID);
        public static final ForeignKey<EventTopicRecord, TopicRecord> EVENT_TOPIC_IBFK_1 = Internal.createForeignKey(Keys.KEY_TOPIC_PRIMARY, EventTopic.EVENT_TOPIC, "EVENT_TOPIC_ibfk_1", EventTopic.EVENT_TOPIC.TOPIC_ID);
        public static final ForeignKey<EventTopicRecord, EventRecord> EVENT_TOPIC_IBFK_2 = Internal.createForeignKey(Keys.KEY_EVENT_PRIMARY, EventTopic.EVENT_TOPIC, "EVENT_TOPIC_ibfk_2", EventTopic.EVENT_TOPIC.EVENT_ID);
        public static final ForeignKey<MagazineSubscriptionRecord, RegisteredUserRecord> MAGAZINE_SUBSCRIPTION_IBFK_1 = Internal.createForeignKey(Keys.KEY_REGISTERED_USER_PRIMARY, MagazineSubscription.MAGAZINE_SUBSCRIPTION, "MAGAZINE_SUBSCRIPTION_ibfk_1", MagazineSubscription.MAGAZINE_SUBSCRIPTION.REGISTERED_USER_ID);
        public static final ForeignKey<NewsletterSubscriptionRecord, RegisteredUserRecord> NEWSLETTER_SUBSCRIPTION_IBFK_1 = Internal.createForeignKey(Keys.KEY_REGISTERED_USER_PRIMARY, NewsletterSubscription.NEWSLETTER_SUBSCRIPTION, "NEWSLETTER_SUBSCRIPTION_ibfk_1", NewsletterSubscription.NEWSLETTER_SUBSCRIPTION.REGISTERED_USER_ID);
        public static final ForeignKey<RegisteredUserRoleRecord, RegisteredUserRecord> REGISTERED_USER_ROLE_IBFK_1 = Internal.createForeignKey(Keys.KEY_REGISTERED_USER_PRIMARY, RegisteredUserRole.REGISTERED_USER_ROLE, "REGISTERED_USER_ROLE_ibfk_1", RegisteredUserRole.REGISTERED_USER_ROLE.REGISTERED_USER_ID);
        public static final ForeignKey<RegisteredUserRoleRecord, RoleRecord> REGISTERED_USER_ROLE_IBFK_2 = Internal.createForeignKey(Keys.KEY_ROLE_PRIMARY, RegisteredUserRole.REGISTERED_USER_ROLE, "REGISTERED_USER_ROLE_ibfk_2", RegisteredUserRole.REGISTERED_USER_ROLE.ROLE_ID);
        public static final ForeignKey<RegisteredUserTopicRecord, TopicRecord> REGISTERED_USER_TOPIC_IBFK_1 = Internal.createForeignKey(Keys.KEY_TOPIC_PRIMARY, RegisteredUserTopic.REGISTERED_USER_TOPIC, "REGISTERED_USER_TOPIC_ibfk_1", RegisteredUserTopic.REGISTERED_USER_TOPIC.TOPIC_ID);
        public static final ForeignKey<RegisteredUserTopicRecord, RegisteredUserRecord> REGISTERED_USER_TOPIC_IBFK_2 = Internal.createForeignKey(Keys.KEY_REGISTERED_USER_PRIMARY, RegisteredUserTopic.REGISTERED_USER_TOPIC, "REGISTERED_USER_TOPIC_ibfk_2", RegisteredUserTopic.REGISTERED_USER_TOPIC.REGISTERED_USER_ID);
        public static final ForeignKey<VenueRecord, LocationRecord> VENUE_IBFK_1 = Internal.createForeignKey(Keys.KEY_LOCATION_PRIMARY, Venue.VENUE, "VENUE_ibfk_1", Venue.VENUE.LOCATION_ID);
    }
}

/*
 * This file is generated by jOOQ.
 */
package com.jakala.menarini.core.entities;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import com.jakala.menarini.core.entities.utils.Indexes;
import com.jakala.menarini.core.entities.utils.Keys;
import com.jakala.menarini.core.entities.utils.DbSchema;
import com.jakala.menarini.core.entities.records.MagazineSubscriptionRecord;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.12"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MagazineSubscription extends TableImpl<MagazineSubscriptionRecord> {

    private static final long serialVersionUID = 1037699239;

    /**
     * The reference instance of <code>menarini_dev.MAGAZINE_SUBSCRIPTION</code>
     */
    public static final MagazineSubscription MAGAZINE_SUBSCRIPTION = new MagazineSubscription();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MagazineSubscriptionRecord> getRecordType() {
        return MagazineSubscriptionRecord.class;
    }

    /**
     * The column <code>menarini_dev.MAGAZINE_SUBSCRIPTION.id</code>.
     */
    public final TableField<MagazineSubscriptionRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>menarini_dev.MAGAZINE_SUBSCRIPTION.magazine</code>.
     */
    public final TableField<MagazineSubscriptionRecord, String> MAGAZINE = createField("magazine", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>menarini_dev.MAGAZINE_SUBSCRIPTION.language</code>.
     */
    public final TableField<MagazineSubscriptionRecord, String> LANGUAGE = createField("language", org.jooq.impl.SQLDataType.VARCHAR(10), this, "");

    /**
     * The column <code>menarini_dev.MAGAZINE_SUBSCRIPTION.registered_user_id</code>.
     */
    public final TableField<MagazineSubscriptionRecord, Long> REGISTERED_USER_ID = createField("registered_user_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>menarini_dev.MAGAZINE_SUBSCRIPTION.lastname</code>.
     */
    public final TableField<MagazineSubscriptionRecord, String> LASTNAME = createField("lastname", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>menarini_dev.MAGAZINE_SUBSCRIPTION.firstname</code>.
     */
    public final TableField<MagazineSubscriptionRecord, String> FIRSTNAME = createField("firstname", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>menarini_dev.MAGAZINE_SUBSCRIPTION.address1</code>.
     */
    public final TableField<MagazineSubscriptionRecord, String> ADDRESS1 = createField("address1", org.jooq.impl.SQLDataType.VARCHAR(2000), this, "");

    /**
     * The column <code>menarini_dev.MAGAZINE_SUBSCRIPTION.address2</code>.
     */
    public final TableField<MagazineSubscriptionRecord, String> ADDRESS2 = createField("address2", org.jooq.impl.SQLDataType.VARCHAR(2000), this, "");

    /**
     * The column <code>menarini_dev.MAGAZINE_SUBSCRIPTION.house_no</code>.
     */
    public final TableField<MagazineSubscriptionRecord, String> HOUSE_NO = createField("house_no", org.jooq.impl.SQLDataType.VARCHAR(10), this, "");

    /**
     * The column <code>menarini_dev.MAGAZINE_SUBSCRIPTION.country</code>.
     */
    public final TableField<MagazineSubscriptionRecord, String> COUNTRY = createField("country", org.jooq.impl.SQLDataType.VARCHAR(30), this, "");

    /**
     * The column <code>menarini_dev.MAGAZINE_SUBSCRIPTION.province</code>.
     */
    public final TableField<MagazineSubscriptionRecord, String> PROVINCE = createField("province", org.jooq.impl.SQLDataType.VARCHAR(30), this, "");

    /**
     * The column <code>menarini_dev.MAGAZINE_SUBSCRIPTION.city</code>.
     */
    public final TableField<MagazineSubscriptionRecord, String> CITY = createField("city", org.jooq.impl.SQLDataType.VARCHAR(60), this, "");

    /**
     * The column <code>menarini_dev.MAGAZINE_SUBSCRIPTION.zip</code>.
     */
    public final TableField<MagazineSubscriptionRecord, String> ZIP = createField("zip", org.jooq.impl.SQLDataType.VARCHAR(15), this, "");

    /**
     * The column <code>menarini_dev.MAGAZINE_SUBSCRIPTION.phone</code>.
     */
    public final TableField<MagazineSubscriptionRecord, String> PHONE = createField("phone", org.jooq.impl.SQLDataType.VARCHAR(30), this, "");

    /**
     * The column <code>menarini_dev.MAGAZINE_SUBSCRIPTION.tax_id_code</code>.
     */
    public final TableField<MagazineSubscriptionRecord, String> TAX_ID_CODE = createField("tax_id_code", org.jooq.impl.SQLDataType.VARCHAR(30), this, "");

    /**
     * The column <code>menarini_dev.MAGAZINE_SUBSCRIPTION.have_been_doctor_or_pharmacist</code>.
     */
    public final TableField<MagazineSubscriptionRecord, String> HAVE_BEEN_DOCTOR_OR_PHARMACIST = createField("have_been_doctor_or_pharmacist", org.jooq.impl.SQLDataType.CHAR(1), this, "");

    /**
     * The column <code>menarini_dev.MAGAZINE_SUBSCRIPTION.graduation_year</code>.
     */
    public final TableField<MagazineSubscriptionRecord, Integer> GRADUATION_YEAR = createField("graduation_year", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>menarini_dev.MAGAZINE_SUBSCRIPTION.registration_year</code>.
     */
    public final TableField<MagazineSubscriptionRecord, Integer> REGISTRATION_YEAR = createField("registration_year", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>menarini_dev.MAGAZINE_SUBSCRIPTION.albo_province</code>.
     */
    public final TableField<MagazineSubscriptionRecord, String> ALBO_PROVINCE = createField("albo_province", org.jooq.impl.SQLDataType.VARCHAR(30), this, "");

    /**
     * The column <code>menarini_dev.MAGAZINE_SUBSCRIPTION.albo_number</code>.
     */
    public final TableField<MagazineSubscriptionRecord, Integer> ALBO_NUMBER = createField("albo_number", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>menarini_dev.MAGAZINE_SUBSCRIPTION.created_on</code>.
     */
    public final TableField<MagazineSubscriptionRecord, Timestamp> CREATED_ON = createField("created_on", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>menarini_dev.MAGAZINE_SUBSCRIPTION.last_updated_on</code>.
     */
    public final TableField<MagazineSubscriptionRecord, Timestamp> LAST_UPDATED_ON = createField("last_updated_on", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>menarini_dev.MAGAZINE_SUBSCRIPTION</code> table reference
     */
    public MagazineSubscription() {
        this(DSL.name("MAGAZINE_SUBSCRIPTION"), null);
    }

    /**
     * Create an aliased <code>menarini_dev.MAGAZINE_SUBSCRIPTION</code> table reference
     */
    public MagazineSubscription(String alias) {
        this(DSL.name(alias), MAGAZINE_SUBSCRIPTION);
    }

    /**
     * Create an aliased <code>menarini_dev.MAGAZINE_SUBSCRIPTION</code> table reference
     */
    public MagazineSubscription(Name alias) {
        this(alias, MAGAZINE_SUBSCRIPTION);
    }

    private MagazineSubscription(Name alias, Table<MagazineSubscriptionRecord> aliased) {
        this(alias, aliased, null);
    }

    private MagazineSubscription(Name alias, Table<MagazineSubscriptionRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> MagazineSubscription(Table<O> child, ForeignKey<O, MagazineSubscriptionRecord> key) {
        super(child, key, MAGAZINE_SUBSCRIPTION);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DbSchema.MENARINI;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.MAGAZINE_SUBSCRIPTION_PRIMARY, Indexes.MAGAZINE_SUBSCRIPTION_REGISTERED_USER_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<MagazineSubscriptionRecord, Long> getIdentity() {
        return Keys.IDENTITY_MAGAZINE_SUBSCRIPTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<MagazineSubscriptionRecord> getPrimaryKey() {
        return Keys.KEY_MAGAZINE_SUBSCRIPTION_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<MagazineSubscriptionRecord>> getKeys() {
        return Arrays.<UniqueKey<MagazineSubscriptionRecord>>asList(Keys.KEY_MAGAZINE_SUBSCRIPTION_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<MagazineSubscriptionRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<MagazineSubscriptionRecord, ?>>asList(Keys.MAGAZINE_SUBSCRIPTION_IBFK_1);
    }

    public RegisteredUser registeredUser() {
        return new RegisteredUser(this, Keys.MAGAZINE_SUBSCRIPTION_IBFK_1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MagazineSubscription as(String alias) {
        return new MagazineSubscription(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MagazineSubscription as(Name alias) {
        return new MagazineSubscription(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public MagazineSubscription rename(String name) {
        return new MagazineSubscription(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public MagazineSubscription rename(Name name) {
        return new MagazineSubscription(name, null);
    }
}

/*
 * This file is generated by jOOQ.
 */
package com.jakala.menarini.core.entities;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import com.jakala.menarini.core.entities.utils.Indexes;
import com.jakala.menarini.core.entities.utils.Keys;
import com.jakala.menarini.core.entities.utils.DbSchema;
import com.jakala.menarini.core.entities.records.EventEnrollmentRecord;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.12"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EventEnrollment extends TableImpl<EventEnrollmentRecord> {

    private static final long serialVersionUID = -741162128;

    /**
     * The reference instance of <code>menarini_dev.EVENT_ENROLLMENT</code>
     */
    public static final EventEnrollment EVENT_ENROLLMENT = new EventEnrollment();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<EventEnrollmentRecord> getRecordType() {
        return EventEnrollmentRecord.class;
    }

    /**
     * The column <code>menarini_dev.EVENT_ENROLLMENT.id</code>.
     */
    public final TableField<EventEnrollmentRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>menarini_dev.EVENT_ENROLLMENT.event_id</code>.
     */
    public final TableField<EventEnrollmentRecord, Long> EVENT_ID = createField("event_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>menarini_dev.EVENT_ENROLLMENT.registered_user_id</code>.
     */
    public final TableField<EventEnrollmentRecord, Long> REGISTERED_USER_ID = createField("registered_user_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>menarini_dev.EVENT_ENROLLMENT.is_live_stream</code>.
     */
    public final TableField<EventEnrollmentRecord, String> IS_LIVE_STREAM = createField("is_live_stream", org.jooq.impl.SQLDataType.VARCHAR(1), this, "");

    /**
     * The column <code>menarini_dev.EVENT_ENROLLMENT.live_stream_registration_ts</code>.
     */
    public final TableField<EventEnrollmentRecord, Timestamp> LIVE_STREAM_REGISTRATION_TS = createField("live_stream_registration_ts", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>menarini_dev.EVENT_ENROLLMENT.is_residential</code>.
     */
    public final TableField<EventEnrollmentRecord, String> IS_RESIDENTIAL = createField("is_residential", org.jooq.impl.SQLDataType.VARCHAR(1), this, "");

    /**
     * The column <code>menarini_dev.EVENT_ENROLLMENT.residential_registration_ts</code>.
     */
    public final TableField<EventEnrollmentRecord, Timestamp> RESIDENTIAL_REGISTRATION_TS = createField("residential_registration_ts", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    public final TableField<EventEnrollmentRecord, Object> IN_PERSON_PARTICIPATION_DATE_LIST = createField("in_person_participation_date_list", org.jooq.impl.DefaultDataType.getDefaultDataType("\"menarini_dev\".\"EVENT_ENROLLMENT_in_person_participation_date_list\""), this, "");

    /**
     * The column <code>menarini_dev.EVENT_ENROLLMENT.created_on</code>.
     */
    public final TableField<EventEnrollmentRecord, Timestamp> CREATED_ON = createField("created_on", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>menarini_dev.EVENT_ENROLLMENT.last_updated_on</code>.
     */
    public final TableField<EventEnrollmentRecord, Timestamp> LAST_UPDATED_ON = createField("last_updated_on", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>menarini_dev.EVENT_ENROLLMENT</code> table reference
     */
    public EventEnrollment() {
        this(DSL.name("EVENT_ENROLLMENT"), null);
    }

    /**
     * Create an aliased <code>menarini_dev.EVENT_ENROLLMENT</code> table reference
     */
    public EventEnrollment(String alias) {
        this(DSL.name(alias), EVENT_ENROLLMENT);
    }

    /**
     * Create an aliased <code>menarini_dev.EVENT_ENROLLMENT</code> table reference
     */
    public EventEnrollment(Name alias) {
        this(alias, EVENT_ENROLLMENT);
    }

    private EventEnrollment(Name alias, Table<EventEnrollmentRecord> aliased) {
        this(alias, aliased, null);
    }

    private EventEnrollment(Name alias, Table<EventEnrollmentRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> EventEnrollment(Table<O> child, ForeignKey<O, EventEnrollmentRecord> key) {
        super(child, key, EVENT_ENROLLMENT);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DbSchema.MENARINI;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.EVENT_ENROLLMENT_EVENT_ID, Indexes.EVENT_ENROLLMENT_PRIMARY, Indexes.EVENT_ENROLLMENT_REGISTERED_USER_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<EventEnrollmentRecord, Long> getIdentity() {
        return Keys.IDENTITY_EVENT_ENROLLMENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<EventEnrollmentRecord> getPrimaryKey() {
        return Keys.KEY_EVENT_ENROLLMENT_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<EventEnrollmentRecord>> getKeys() {
        return Arrays.<UniqueKey<EventEnrollmentRecord>>asList(Keys.KEY_EVENT_ENROLLMENT_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<EventEnrollmentRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<EventEnrollmentRecord, ?>>asList(Keys.EVENT_ENROLLMENT_IBFK_1, Keys.EVENT_ENROLLMENT_IBFK_2);
    }

    public Event event() {
        return new Event(this, Keys.EVENT_ENROLLMENT_IBFK_1);
    }

    public RegisteredUser registeredUser() {
        return new RegisteredUser(this, Keys.EVENT_ENROLLMENT_IBFK_2);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EventEnrollment as(String alias) {
        return new EventEnrollment(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EventEnrollment as(Name alias) {
        return new EventEnrollment(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public EventEnrollment rename(String name) {
        return new EventEnrollment(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public EventEnrollment rename(Name name) {
        return new EventEnrollment(name, null);
    }
}

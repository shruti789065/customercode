/*
 * This file is generated by jOOQ.
 */
package com.jakala.menarini.core.entities;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import com.jakala.menarini.core.entities.utils.Indexes;
import com.jakala.menarini.core.entities.utils.Keys;
import com.jakala.menarini.core.entities.utils.DbSchema;
import com.jakala.menarini.core.entities.records.RegisteredUserRoleRecord;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.12"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RegisteredUserRole extends TableImpl<RegisteredUserRoleRecord> {

    private static final long serialVersionUID = -1539324405;

    /**
     * The reference instance of <code>menarini_dev.REGISTERED_USER_ROLE</code>
     */
    public static final RegisteredUserRole REGISTERED_USER_ROLE = new RegisteredUserRole();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RegisteredUserRoleRecord> getRecordType() {
        return RegisteredUserRoleRecord.class;
    }

    /**
     * The column <code>menarini_dev.REGISTERED_USER_ROLE.id</code>.
     */
    public final TableField<RegisteredUserRoleRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>menarini_dev.REGISTERED_USER_ROLE.registered_user_id</code>.
     */
    public final TableField<RegisteredUserRoleRecord, Long> REGISTERED_USER_ID = createField("registered_user_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>menarini_dev.REGISTERED_USER_ROLE.role_id</code>.
     */
    public final TableField<RegisteredUserRoleRecord, Long> ROLE_ID = createField("role_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>menarini_dev.REGISTERED_USER_ROLE.created_on</code>.
     */
    public final TableField<RegisteredUserRoleRecord, Timestamp> CREATED_ON = createField("created_on", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>menarini_dev.REGISTERED_USER_ROLE.last_updated_on</code>.
     */
    public final TableField<RegisteredUserRoleRecord, Timestamp> LAST_UPDATED_ON = createField("last_updated_on", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>menarini_dev.REGISTERED_USER_ROLE</code> table reference
     */
    public RegisteredUserRole() {
        this(DSL.name("REGISTERED_USER_ROLE"), null);
    }

    /**
     * Create an aliased <code>menarini_dev.REGISTERED_USER_ROLE</code> table reference
     */
    public RegisteredUserRole(String alias) {
        this(DSL.name(alias), REGISTERED_USER_ROLE);
    }

    /**
     * Create an aliased <code>menarini_dev.REGISTERED_USER_ROLE</code> table reference
     */
    public RegisteredUserRole(Name alias) {
        this(alias, REGISTERED_USER_ROLE);
    }

    private RegisteredUserRole(Name alias, Table<RegisteredUserRoleRecord> aliased) {
        this(alias, aliased, null);
    }

    private RegisteredUserRole(Name alias, Table<RegisteredUserRoleRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> RegisteredUserRole(Table<O> child, ForeignKey<O, RegisteredUserRoleRecord> key) {
        super(child, key, REGISTERED_USER_ROLE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DbSchema.MENARINI;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.REGISTERED_USER_ROLE_PRIMARY, Indexes.REGISTERED_USER_ROLE_REGISTERED_USER_ID, Indexes.REGISTERED_USER_ROLE_ROLE_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<RegisteredUserRoleRecord, Long> getIdentity() {
        return Keys.IDENTITY_REGISTERED_USER_ROLE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<RegisteredUserRoleRecord> getPrimaryKey() {
        return Keys.KEY_REGISTERED_USER_ROLE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<RegisteredUserRoleRecord>> getKeys() {
        return Arrays.<UniqueKey<RegisteredUserRoleRecord>>asList(Keys.KEY_REGISTERED_USER_ROLE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<RegisteredUserRoleRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<RegisteredUserRoleRecord, ?>>asList(Keys.REGISTERED_USER_ROLE_IBFK_1, Keys.REGISTERED_USER_ROLE_IBFK_2);
    }

    public RegisteredUser registeredUser() {
        return new RegisteredUser(this, Keys.REGISTERED_USER_ROLE_IBFK_1);
    }

    public Role role() {
        return new Role(this, Keys.REGISTERED_USER_ROLE_IBFK_2);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RegisteredUserRole as(String alias) {
        return new RegisteredUserRole(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RegisteredUserRole as(Name alias) {
        return new RegisteredUserRole(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public RegisteredUserRole rename(String name) {
        return new RegisteredUserRole(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public RegisteredUserRole rename(Name name) {
        return new RegisteredUserRole(name, null);
    }
}

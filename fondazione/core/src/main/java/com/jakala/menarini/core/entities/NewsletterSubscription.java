/*
 * This file is generated by jOOQ.
 */
package com.jakala.menarini.core.entities;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import com.jakala.menarini.core.entities.utils.Indexes;
import com.jakala.menarini.core.entities.utils.Keys;
import com.jakala.menarini.core.entities.utils.DbSchema;
import com.jakala.menarini.core.entities.records.NewsletterSubscriptionRecord;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.12"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class NewsletterSubscription extends TableImpl<NewsletterSubscriptionRecord> {

    private static final long serialVersionUID = -657808813;

    /**
     * The reference instance of <code>menarini_dev.NEWSLETTER_SUBSCRIPTION</code>
     */
    public static final NewsletterSubscription NEWSLETTER_SUBSCRIPTION = new NewsletterSubscription();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<NewsletterSubscriptionRecord> getRecordType() {
        return NewsletterSubscriptionRecord.class;
    }

    /**
     * The column <code>menarini_dev.NEWSLETTER_SUBSCRIPTION.id</code>.
     */
    public final TableField<NewsletterSubscriptionRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>menarini_dev.NEWSLETTER_SUBSCRIPTION.lastname</code>.
     */
    public final TableField<NewsletterSubscriptionRecord, String> LASTNAME = createField("lastname", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>menarini_dev.NEWSLETTER_SUBSCRIPTION.firstname</code>.
     */
    public final TableField<NewsletterSubscriptionRecord, String> FIRSTNAME = createField("firstname", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>menarini_dev.NEWSLETTER_SUBSCRIPTION.email</code>.
     */
    public final TableField<NewsletterSubscriptionRecord, String> EMAIL = createField("email", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>menarini_dev.NEWSLETTER_SUBSCRIPTION.occupation</code>.
     */
    public final TableField<NewsletterSubscriptionRecord, String> OCCUPATION = createField("occupation", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>menarini_dev.NEWSLETTER_SUBSCRIPTION.personal_data_processing_consent</code>.
     */
    public final TableField<NewsletterSubscriptionRecord, String> PERSONAL_DATA_PROCESSING_CONSENT = createField("personal_data_processing_consent", org.jooq.impl.SQLDataType.CHAR(1), this, "");

    /**
     * The column <code>menarini_dev.NEWSLETTER_SUBSCRIPTION.personal_data_processing_consent_ts</code>.
     */
    public final TableField<NewsletterSubscriptionRecord, Timestamp> PERSONAL_DATA_PROCESSING_CONSENT_TS = createField("personal_data_processing_consent_ts", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>menarini_dev.NEWSLETTER_SUBSCRIPTION.newsletter_subscription</code>.
     */
    public final TableField<NewsletterSubscriptionRecord, String> NEWSLETTER_SUBSCRIPTION_ = createField("newsletter_subscription", org.jooq.impl.SQLDataType.CHAR(1), this, "");

    /**
     * The column <code>menarini_dev.NEWSLETTER_SUBSCRIPTION.newsletter_subscription_ts</code>.
     */
    public final TableField<NewsletterSubscriptionRecord, Timestamp> NEWSLETTER_SUBSCRIPTION_TS = createField("newsletter_subscription_ts", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>menarini_dev.NEWSLETTER_SUBSCRIPTION.registered_user_id</code>.
     */
    public final TableField<NewsletterSubscriptionRecord, Long> REGISTERED_USER_ID = createField("registered_user_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>menarini_dev.NEWSLETTER_SUBSCRIPTION.created_on</code>.
     */
    public final TableField<NewsletterSubscriptionRecord, Timestamp> CREATED_ON = createField("created_on", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>menarini_dev.NEWSLETTER_SUBSCRIPTION.last_updated_on</code>.
     */
    public final TableField<NewsletterSubscriptionRecord, Timestamp> LAST_UPDATED_ON = createField("last_updated_on", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>menarini_dev.NEWSLETTER_SUBSCRIPTION</code> table reference
     */
    public NewsletterSubscription() {
        this(DSL.name("NEWSLETTER_SUBSCRIPTION"), null);
    }

    /**
     * Create an aliased <code>menarini_dev.NEWSLETTER_SUBSCRIPTION</code> table reference
     */
    public NewsletterSubscription(String alias) {
        this(DSL.name(alias), NEWSLETTER_SUBSCRIPTION);
    }

    /**
     * Create an aliased <code>menarini_dev.NEWSLETTER_SUBSCRIPTION</code> table reference
     */
    public NewsletterSubscription(Name alias) {
        this(alias, NEWSLETTER_SUBSCRIPTION);
    }

    private NewsletterSubscription(Name alias, Table<NewsletterSubscriptionRecord> aliased) {
        this(alias, aliased, null);
    }

    private NewsletterSubscription(Name alias, Table<NewsletterSubscriptionRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> NewsletterSubscription(Table<O> child, ForeignKey<O, NewsletterSubscriptionRecord> key) {
        super(child, key, NEWSLETTER_SUBSCRIPTION);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DbSchema.MENARINI;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.NEWSLETTER_SUBSCRIPTION_PRIMARY, Indexes.NEWSLETTER_SUBSCRIPTION_REGISTERED_USER_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<NewsletterSubscriptionRecord, Long> getIdentity() {
        return Keys.IDENTITY_NEWSLETTER_SUBSCRIPTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<NewsletterSubscriptionRecord> getPrimaryKey() {
        return Keys.KEY_NEWSLETTER_SUBSCRIPTION_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<NewsletterSubscriptionRecord>> getKeys() {
        return Arrays.<UniqueKey<NewsletterSubscriptionRecord>>asList(Keys.KEY_NEWSLETTER_SUBSCRIPTION_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<NewsletterSubscriptionRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<NewsletterSubscriptionRecord, ?>>asList(Keys.NEWSLETTER_SUBSCRIPTION_IBFK_1);
    }

    public RegisteredUser registeredUser() {
        return new RegisteredUser(this, Keys.NEWSLETTER_SUBSCRIPTION_IBFK_1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public NewsletterSubscription as(String alias) {
        return new NewsletterSubscription(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public NewsletterSubscription as(Name alias) {
        return new NewsletterSubscription(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public NewsletterSubscription rename(String name) {
        return new NewsletterSubscription(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public NewsletterSubscription rename(Name name) {
        return new NewsletterSubscription(name, null);
    }
}

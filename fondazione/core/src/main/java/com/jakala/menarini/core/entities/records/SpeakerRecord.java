/*
 * This file is generated by jOOQ.
 */
package com.jakala.menarini.core.entities.records;


import java.time.LocalDateTime;

import com.jakala.menarini.core.entities.Speaker;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SpeakerRecord extends UpdatableRecordImpl<SpeakerRecord> implements Record7<Long, String, String, String, String, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>menarini_dev.SPEAKER.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>menarini_dev.SPEAKER.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>menarini_dev.SPEAKER.lastname</code>.
     */
    public void setLastname(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>menarini_dev.SPEAKER.lastname</code>.
     */
    public String getLastname() {
        return (String) get(1);
    }

    /**
     * Setter for <code>menarini_dev.SPEAKER.firstname</code>.
     */
    public void setFirstname(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>menarini_dev.SPEAKER.firstname</code>.
     */
    public String getFirstname() {
        return (String) get(2);
    }

    /**
     * Setter for <code>menarini_dev.SPEAKER.bio</code>.
     */
    public void setBio(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>menarini_dev.SPEAKER.bio</code>.
     */
    public String getBio() {
        return (String) get(3);
    }

    /**
     * Setter for <code>menarini_dev.SPEAKER.curriculum</code>.
     */
    public void setCurriculum(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>menarini_dev.SPEAKER.curriculum</code>.
     */
    public String getCurriculum() {
        return (String) get(4);
    }

    /**
     * Setter for <code>menarini_dev.SPEAKER.created_on</code>.
     */
    public void setCreatedOn(LocalDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>menarini_dev.SPEAKER.created_on</code>.
     */
    public LocalDateTime getCreatedOn() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>menarini_dev.SPEAKER.last_updated_on</code>.
     */
    public void setLastUpdatedOn(LocalDateTime value) {
        set(6, value);
    }

    /**
     * Getter for <code>menarini_dev.SPEAKER.last_updated_on</code>.
     */
    public LocalDateTime getLastUpdatedOn() {
        return (LocalDateTime) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<Long, String, String, String, String, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Long, String, String, String, String, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Speaker.SPEAKER.ID;
    }

    @Override
    public Field<String> field2() {
        return Speaker.SPEAKER.LASTNAME;
    }

    @Override
    public Field<String> field3() {
        return Speaker.SPEAKER.FIRSTNAME;
    }

    @Override
    public Field<String> field4() {
        return Speaker.SPEAKER.BIO;
    }

    @Override
    public Field<String> field5() {
        return Speaker.SPEAKER.CURRICULUM;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return Speaker.SPEAKER.CREATED_ON;
    }

    @Override
    public Field<LocalDateTime> field7() {
        return Speaker.SPEAKER.LAST_UPDATED_ON;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getLastname();
    }

    @Override
    public String component3() {
        return getFirstname();
    }

    @Override
    public String component4() {
        return getBio();
    }

    @Override
    public String component5() {
        return getCurriculum();
    }

    @Override
    public LocalDateTime component6() {
        return getCreatedOn();
    }

    @Override
    public LocalDateTime component7() {
        return getLastUpdatedOn();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getLastname();
    }

    @Override
    public String value3() {
        return getFirstname();
    }

    @Override
    public String value4() {
        return getBio();
    }

    @Override
    public String value5() {
        return getCurriculum();
    }

    @Override
    public LocalDateTime value6() {
        return getCreatedOn();
    }

    @Override
    public LocalDateTime value7() {
        return getLastUpdatedOn();
    }

    @Override
    public SpeakerRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public SpeakerRecord value2(String value) {
        setLastname(value);
        return this;
    }

    @Override
    public SpeakerRecord value3(String value) {
        setFirstname(value);
        return this;
    }

    @Override
    public SpeakerRecord value4(String value) {
        setBio(value);
        return this;
    }

    @Override
    public SpeakerRecord value5(String value) {
        setCurriculum(value);
        return this;
    }

    @Override
    public SpeakerRecord value6(LocalDateTime value) {
        setCreatedOn(value);
        return this;
    }

    @Override
    public SpeakerRecord value7(LocalDateTime value) {
        setLastUpdatedOn(value);
        return this;
    }

    @Override
    public SpeakerRecord values(Long value1, String value2, String value3, String value4, String value5, LocalDateTime value6, LocalDateTime value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SpeakerRecord
     */
    public SpeakerRecord() {
        super(Speaker.SPEAKER);
    }

    /**
     * Create a detached, initialised SpeakerRecord
     */
    public SpeakerRecord(Long id, String lastname, String firstname, String bio, String curriculum, LocalDateTime createdOn, LocalDateTime lastUpdatedOn) {
        super(Speaker.SPEAKER);

        setId(id);
        setLastname(lastname);
        setFirstname(firstname);
        setBio(bio);
        setCurriculum(curriculum);
        setCreatedOn(createdOn);
        setLastUpdatedOn(lastUpdatedOn);
    }
}

/*
 * This file is generated by jOOQ.
 */
package com.jakala.menarini.core.entities;


import java.sql.Date;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import com.jakala.menarini.core.entities.utils.Indexes;
import com.jakala.menarini.core.entities.utils.Keys;
import com.jakala.menarini.core.entities.utils.DbSchema;
import com.jakala.menarini.core.entities.records.EventSessionDateRecord;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.12"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EventSessionDate extends TableImpl<EventSessionDateRecord> {

    private static final long serialVersionUID = 324176438;

    /**
     * The reference instance of <code>menarini_dev.EVENT_SESSION_DATE</code>
     */
    public static final EventSessionDate EVENT_SESSION_DATE = new EventSessionDate();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<EventSessionDateRecord> getRecordType() {
        return EventSessionDateRecord.class;
    }

    /**
     * The column <code>menarini_dev.EVENT_SESSION_DATE.id</code>.
     */
    public final TableField<EventSessionDateRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>menarini_dev.EVENT_SESSION_DATE.session</code>.
     */
    public final TableField<EventSessionDateRecord, String> SESSION = createField("session", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>menarini_dev.EVENT_SESSION_DATE.seq_no</code>.
     */
    public final TableField<EventSessionDateRecord, Integer> SEQ_NO = createField("seq_no", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>menarini_dev.EVENT_SESSION_DATE.session_date</code>.
     */
    public final TableField<EventSessionDateRecord, Date> SESSION_DATE = createField("session_date", org.jooq.impl.SQLDataType.DATE, this, "");

    /**
     * The column <code>menarini_dev.EVENT_SESSION_DATE.location_id</code>.
     */
    public final TableField<EventSessionDateRecord, Long> LOCATION_ID = createField("location_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>menarini_dev.EVENT_SESSION_DATE.venue_id</code>.
     */
    public final TableField<EventSessionDateRecord, Long> VENUE_ID = createField("venue_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>menarini_dev.EVENT_SESSION_DATE.event_id</code>.
     */
    public final TableField<EventSessionDateRecord, Long> EVENT_ID = createField("event_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>menarini_dev.EVENT_SESSION_DATE.created_on</code>.
     */
    public final TableField<EventSessionDateRecord, Timestamp> CREATED_ON = createField("created_on", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>menarini_dev.EVENT_SESSION_DATE.last_updated_on</code>.
     */
    public final TableField<EventSessionDateRecord, Timestamp> LAST_UPDATED_ON = createField("last_updated_on", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>menarini_dev.EVENT_SESSION_DATE</code> table reference
     */
    public EventSessionDate() {
        this(DSL.name("EVENT_SESSION_DATE"), null);
    }

    /**
     * Create an aliased <code>menarini_dev.EVENT_SESSION_DATE</code> table reference
     */
    public EventSessionDate(String alias) {
        this(DSL.name(alias), EVENT_SESSION_DATE);
    }

    /**
     * Create an aliased <code>menarini_dev.EVENT_SESSION_DATE</code> table reference
     */
    public EventSessionDate(Name alias) {
        this(alias, EVENT_SESSION_DATE);
    }

    private EventSessionDate(Name alias, Table<EventSessionDateRecord> aliased) {
        this(alias, aliased, null);
    }

    private EventSessionDate(Name alias, Table<EventSessionDateRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> EventSessionDate(Table<O> child, ForeignKey<O, EventSessionDateRecord> key) {
        super(child, key, EVENT_SESSION_DATE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DbSchema.MENARINI;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.EVENT_SESSION_DATE_EVENT_ID, Indexes.EVENT_SESSION_DATE_LOCATION_ID, Indexes.EVENT_SESSION_DATE_PRIMARY, Indexes.EVENT_SESSION_DATE_VENUE_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<EventSessionDateRecord, Long> getIdentity() {
        return Keys.IDENTITY_EVENT_SESSION_DATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<EventSessionDateRecord> getPrimaryKey() {
        return Keys.KEY_EVENT_SESSION_DATE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<EventSessionDateRecord>> getKeys() {
        return Arrays.<UniqueKey<EventSessionDateRecord>>asList(Keys.KEY_EVENT_SESSION_DATE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<EventSessionDateRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<EventSessionDateRecord, ?>>asList(Keys.EVENT_SESSION_DATE_IBFK_1, Keys.EVENT_SESSION_DATE_IBFK_2, Keys.EVENT_SESSION_DATE_IBFK_3);
    }

    public Location location() {
        return new Location(this, Keys.EVENT_SESSION_DATE_IBFK_1);
    }

    public Venue venue() {
        return new Venue(this, Keys.EVENT_SESSION_DATE_IBFK_2);
    }

    public Event event() {
        return new Event(this, Keys.EVENT_SESSION_DATE_IBFK_3);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EventSessionDate as(String alias) {
        return new EventSessionDate(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EventSessionDate as(Name alias) {
        return new EventSessionDate(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public EventSessionDate rename(String name) {
        return new EventSessionDate(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public EventSessionDate rename(Name name) {
        return new EventSessionDate(name, null);
    }
}
